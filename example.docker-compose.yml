services:
  mongo:
    image: mongo
    restart: always
    volumes:
      - ".docker-volumes/mongo_data:/data/db"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  nats:
    container_name: nats
    hostname: nats
    image: nats:2-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    command:
      - -js
      - -sd
      - /var/lib/nats/data
    volumes:
      - '.docker-volumes/jsdata:/var/lib/nats/data'

  nui:
    image: ghcr.io/nats-nui/nui:edge
    ports:
      - "31312:31311"
    depends_on:
      - nats

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    user: "0"
    volumes:
      - ".docker-volumes/grafana:/var/lib/grafana"
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - "./otel-collector-config.yml:/etc/otel-collector-config.yml"
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - prometheus
      - grafana
